import { ConnectButton } from "@rainbow-me/rainbowkit";
import type { NextPage } from "next";
import Head from "next/head";
import styles from "../styles/Home.module.css";
import { useState } from "react";
import img from "../assets/OIP.jpeg";
import { useIsMounted } from "../hooks/useIsMounted";
import { getContract, getWalletClient } from "@wagmi/core";
import {
  useAccount,
  useContractRead,
  useContractWrite,
  usePrepareContractWrite,
  useWaitForTransaction,
} from "wagmi";
import Image from "next/image";
import { WHITELIST_CONTRACT_ADDRESS, abi } from "../constants/index";

const Home: NextPage = () => {
  const isMounted = useIsMounted();
  const { isConnected, address } = useAccount();
  //add the msg.sender to whitelist
  const {
    config,
    error: prepareError,
    isError: isPrepareError,
  } = usePrepareContractWrite({
    address: WHITELIST_CONTRACT_ADDRESS,
    abi: abi,
    functionName: "addAddressToWhitelist",
  });

  const { data, error, isError, write } = useContractWrite(config);

  const { isLoading, isSuccess } = useWaitForTransaction({
    hash: data?.hash,
  });

  const contractRead = useContractRead({
    address: WHITELIST_CONTRACT_ADDRESS,
    abi: abi,
    functionName: "numWhitelistedAddresses",
    onSuccess(data) {
      console.log("Success", data);
    },
  });
  const whitelistedNumber = Number(contractRead.data);

  const contractReadMax = useContractRead({
    address: WHITELIST_CONTRACT_ADDRESS,
    abi: abi,
    functionName: "maxWhitelistedAddresses",
    onSuccess(data) {
      console.log("Success", data);
    },
  });
  const maxWhitelistedNumber = Number(contractReadMax.data);
  return (
    <div className={styles.body}>
      <Head>
        <meta
          content="Generated by @rainbow-me/create-rainbowkit"
          name="description"
        />
        <link href="/favicon.ico" rel="icon" />
      </Head>

      <div className={styles.connect}>
        <ConnectButton />
      </div>
      {isMounted && (
        <div className={styles.card}>
          <div className={styles.container}>
            <div>
              <h1 style={{ textAlign: "left", marginLeft: "-30px" }}>
                Whitelist Yourself Today!
              </h1>
              {!isSuccess && !(isPrepareError || isError) && (
                <div>
                  <h3 style={{ textAlign: "left", marginLeft: "-30px" }}>
                    Get early access
                  </h3>
                  <h4
                    style={{ textAlign: "left", marginLeft: "-30px" }}
                    className="shine"
                  >
                    {whitelistedNumber} addresses are already whitelisted!{" "}
                    {maxWhitelistedNumber - whitelistedNumber} remaining{" "}
                  </h4>
                  {isConnected ? (
                    <button
                      className={styles.glassButton}
                      disabled={!write || isLoading || !isConnected}
                      onClick={() => write?.()}
                    >
                      {isLoading ? "Loading..." : "Join the Whitelist"}
                    </button>
                  ) : (
                    <p style={{ textAlign: "left", marginLeft: "-30px" }}>
                      Please Connect your wallet to join the whitelist!
                    </p>
                  )}
                </div>
              )}
              {!isSuccess && (isPrepareError || isError) && (
                <div>
                  <h4 style={{ textAlign: "left", marginLeft: "-30px" }}>
                    You have already signed for the whitelist!
                  </h4>
                </div>
              )}

              {isSuccess && isConnected && (
                <h3 style={{ textAlign: "left", marginLeft: "-30px" }}>
                  Successfully joined the waitlist!
                </h3>
              )}
            </div>

            <Image
              style={{ borderRadius: "20%", paddingLeft: "10px" }}
              width={400}
              height={400}
              src={img}
            />
          </div>
        </div>
      )}
    </div>
  );
};

export default Home;
